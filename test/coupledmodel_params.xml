<ParameterList name="coupledmodel">
  <!-- Some kind of coupling graph should be created here                              -->
  
  <!-- Select the solving and synchronization mode                                     -->
  <!--  mode 'D': decoupled, the systems are solved separately and the solutions are   -->
  <!--            synchronized after the Newton process has converged.                 -->
  <!--  mode 'E': An eliminated system is solved in which the inverse of the           -->
  <!--            Schur complement is approximated using a Neumann approximation.      -->
  <!--            The solutions are synchronized before every computation of the RHS   -->
  <!--            and the Jacobian.                                                    -->
  <Parameter name="Solving scheme" type="char" value="E"/>
  
  <!-- Determine the order of the Neumann approximation in the elimination based solve -->
  <!-- Choose 0, 1 or 2                                                                -->
  <!-- This only works if you have chosen E for "Solving scheme"                       -->
  <Parameter name="Order of Neumann approximation" type="int" value="2"/>

  <!-- Use hashing to decide to act based on whether a state has changed               -->
  <!-- Right now the functions synchronize(), computeRHS() and computeJacobian()       -->
  <!-- can check the hash of the stateView and decide to recompute.                    -->
  <Parameter name="Use hashing" type="bool" value="true"/>

  
</ParameterList>
