* Continuation in topography

  In order to perform a continuation in topography we need to make sure
  that at the discrete level of the landmasks the change is gradual. 
  To achieve this we employ a variant of the homotopy technique 
  [Seydel, Chapter 4?]. We let a parameter $\delta$ label the 
  landmasks. Then at non-integer values of $\delta$ we need it to define
  the gradual change between two landmasks. 
  
   +---------------------------------------------+
   $m_{k}$               $k$-th topography 
   $F(\bvec{x},m_{a}) = 0$   RHS at topo $a$
   $F(\bvec{x},m_{b}) = 0$   RHS at topo $b$
   +---------------------------------------------+
   Homotopy function (1):
   $F^h(\bvec{x},\delta) = \hat{\delta} F(\bvec{x},m_b) + (1-\hat{\delta}) F(\bvec{x},m_a)$
   $a = \lfloor \delta \rfloor$ 
   $b = a + 1$
   $\hat{\delta} = \delta - a$

   +---------------------------------------------+
   Homotopy function (2):

   $F^h(\bvec{x}, \delta) = \text{sin}^2(\frac{\pi \delta}{2})F(\bvec{x},m_{b}) + \text{cos}^2(\frac{\pi \delta}{2}) F(\bvec{x},m_{a})$

   $\delta$  =  0..1..2..3..4..5..6..7 
   $a$  =  0  2  2  4  4  6  6  8
   $b$  =  1  1  3  3  5  5  7  7
  
   $k = \lfloor \delta \rfloor$   
   $d_0 = 1$
   $s_0 = 0$
   $d_{k+1} = d_k + 2(k\mod 2)$
   $s_{k+1} = s_k + 2((k+1)\mod 2)$
   
   $F_\bvec{x}^h(\bvec{x}, \delta) = \text{sin}^2(\frac{\pi \delta}{2})F_\bvec{x}(\bvec{x},m_{d}) + \text{cos}^2(\frac{\pi \delta}{2}) F_\bvec{x}(\bvec{x},m_{s})$

   $F_\delta^h(\bvec{x}, \delta) = \pi \sin \left(\frac{\pi\delta}{2}\right) \cos\left(\frac{\pi\delta}{2}\right) 
          \big(F(\bvec{x},m_{d})-F(\bvec{x},m_{s})\big)$
   
   +---------------------------------------------+
   Homotopy function (3):
   $F^h(\bvec{x}, \delta) = \text{sin}^2(\frac{\pi \delta}{2})F(\mu(\bvec{x}),m_{d}) + \text{cos}^2(\frac{\pi \delta}{2}) F(\mu(\bvec{x}),m_{s})$
   $\mu(\bvec{x})$ projects an existing solution on a new mask
   

   +---------------------------------------------+
   Pseudo-arclength continuation:
   \begin{align*}
   F^h(\bvec{x},\delta) &= 0\\
   r = \dot{\bvec{x}} (\bvec{x} - \bvec{x}_0) + \dot{\delta} (\delta - \delta_0) - \Delta s &= 0
   \end{align*}

   +---------------------------------------------+ 
	
   \begin{equation*}
   \begin{bmatrix}
   F^h_{\bvec{x}} & F^h_{\delta} \\
   \dot{\bvec{x}}^T & \dot{\lambda}   
   \end{bmatrix} \begin{bmatrix} \Delta x \\ \Delta \delta \end{bmatrix} = 
   \begin{bmatrix} -F^h(\bvec{x},\delta) \\ -r \end{bmatrix}
   \end{equation*}  
   
* Implementation
  
  New templated model, Topo
  
  template<typename Model> 
  class Topo
  
  - Model is an RCP to a model

  - Model should have get- and setLandMask functionality
	
  - Topo maintains names of landmasks

  - Topo data members:
	
    std::vector<std::string> landMasks_;
	int    nMasks_; // number of topographies
    double delta_;  // continuation parameter

  - Topo member functions:
	- computeRHS()
      {
	  
      }
	- 
	
  computeJacobian();
